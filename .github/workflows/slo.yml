name: SLO
on:
  pull_request:
    branches:
      - main
      - master
      - release-*
  workflow_dispatch:

jobs:
  test-slo:
    concurrency:
      group: slo-${{ github.ref }}
    if: (!contains(github.event.pull_request.labels.*.name, 'no slo'))

    runs-on: ubuntu-latest
    name: SLO test
    permissions:
      checks: write
      pull-requests: write
      contents: read
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run SLO
        uses: ydb-platform/slo-tests@main
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KUBECONFIG_B64: ${{ secrets.SLO_KUBE_CONFIG }}
          AWS_CREDENTIALS_B64: ${{ secrets.SLO_AWS_CREDENTIALS }}
          AWS_CONFIG_B64: ${{ secrets.SLO_AWS_CONFIG }}
          DOCKER_USERNAME: ${{ secrets.SLO_DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.SLO_DOCKER_PASSWORD }}
          DOCKER_REPO: ${{ secrets.SLO_DOCKER_REPO }}
          DOCKER_FOLDER: ${{ secrets.SLO_DOCKER_FOLDER }}
          s3_endpoint: ${{ secrets.SLO_S3_ENDPOINT }}
          s3_images_folder: ${{ vars.SLO_S3_IMAGES_FOLDER }}
          grafana_domain: ${{ vars.SLO_GRAFANA_DOMAIN }}
          grafana_dashboard: ${{ vars.SLO_GRAFANA_DASHBOARD }}
          ydb_version: 'newest'
          timeBetweenPhases: 30
          shutdownTime: 30

          language_id0: 'nodejs'
          workload_path0: 'slo-workload'
          language0: 'Native ydb-nodejs-sdk general'
          workload_build_context0: ..
          workload_build_options0: -f Dockerfile --build-arg SRC_PATH=slo-workload --build-arg JOB_NAME=workload-slo

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: slo-logs
          path: logs/
